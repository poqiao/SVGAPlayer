apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'maven-publish'

android {
    namespace = "com.opensource.svgaplayer"
    compileSdk = 34

    defaultConfig {
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {

    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.squareup.wire:wire-runtime:5.1.0"
}
//maven-publish 插件的配置
// publishing 用于定义项目的发布相关配置
publishing {

    // publications 用于定义发布任务的配置块
    publications {
        // 这个 aarAndroid 可以随便填，只是一个任务名字而已(如果有多渠道，整段在下面多复制一份)
        // MavenPublication必须有，这个是调用的任务类
//        aarAndroid(MavenPublication) {
//            // 这里头是artifacts的配置信息，不填会采用默认的
//            // 必须有这个 否则不会上传AAR包  将bundleReleaseAar任务的单个输出文件作为发布的AAR文件。这样，该AAR文件就会成为 MavenPublication 的 artifact 并进行发布
//            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
//        }
        release(MavenPublication) {
//            groupId = 'com.my-company'
//            artifactId = 'my-library'
//            version = '1.0'

            afterEvaluate {
                from components.release
            }
        }
    }
}




